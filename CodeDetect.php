<?php eval("?>".base64_decode("<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Code Detect</title>
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container">
    <div>
        <?php
        /*
        $ini_array = parse_ini_file("config.ini", true);
        echo "<pre>";
        print_r($ini_array['other']);
        echo "</pre>";*/
        ?>
        <h1>Code Detect</h1>
        <ul class="list-inline">
            <li><a href="?">[ Index ]</a> </li>
            <li><a href="?p=1">[ generator ]</a></li>
            <li><a href="?p=2">[ Re Generator ]</a></li>
            <li><a href="?p=3">[ remove ]</a></li>
            <li><a href="?p=4">[ check ]</a></li>
        </ul>
        <hr>
    </div>
<pre>
<?php
if (isset($_GET['p'])) {
    if ($_GET['p'] == 1) {
        gen();
    } else if ($_GET['p'] == 2) {
        up();
    } else if ($_GET['p'] == 3) {
        remove();
    } else if ($_GET['p'] == 4) {
        check();
    } else {
        echo "Who Am I";
        exit();
    }
} else {
    echo <<<HTML
Who AM I<br>
ver. 1.1
HTML;

}
?>
</pre>
<hr>
    Powered By <a href="https://www.facebook.com/aommiez" target="_blank">MRG</a> Request or Support : aommiez@gmail.com
</div>
    </body>
</html>
<?php
function gen () {
    $ini = parse_ini_file("config.ini", true);
    $aaa = $ini['other']['file'];
    $aaa = explode(",", $aaa);
    $file_not_detect = $ini['other']['file_name_not_detect'];
    $file_not_detect = explode(',',$file_not_detect);
    $di = new RecursiveDirectoryIterator(__DIR__,RecursiveDirectoryIterator::SKIP_DOTS);
    $it = new RecursiveIteratorIterator($di);
    foreach($it as $file)
    {
        if(in_array(pathinfo($file,PATHINFO_EXTENSION),$aaa)) {
            $info = pathinfo($file);
            $file_name =  basename($file,'.'.$info['extension']);
            $nf = $file_not_detect;
            if (!in_array($file_name, $nf)) {
                $n = str_replace($aaa,'mrg',$file);
                $f = fopen($n,"w");
                fwrite($f,base64_encode(base64_encode(md5_file($file).date("d.m.y H:i:s.", filemtime($file))).'MRG').PHP_EOL);
                fclose($f);
                $lines = file($file);
                $z = fopen($n, 'a');
                foreach ($lines as $line_num => $line) {
                    fwrite($z, '#'.$line_num.":".$line);
                }
                fclose($z);
                echo $file ,PHP_EOL." generator success <br>";
            }
        }
    }
}
function remove () {
    $di = new RecursiveDirectoryIterator(__DIR__,RecursiveDirectoryIterator::SKIP_DOTS);
    $it = new RecursiveIteratorIterator($di);
    foreach($it as $file)
    {
        if(pathinfo($file,PATHINFO_EXTENSION) == "mrg") {
            unlink($file);
            echo $file ,PHP_EOL." Remove success <br>";
        }
    }
}
function check () {
    $di = new RecursiveDirectoryIterator(__DIR__,RecursiveDirectoryIterator::SKIP_DOTS);
    $it = new RecursiveIteratorIterator($di);
    $mm = "PHP Code Detect Logs Report : ".get_Datetime_Now();
    $fa = 0;
    $ok = 0;
    $ini = parse_ini_file("config.ini", true);
    $aaa = $ini['other']['file'];
    $aaa = explode(",", $aaa);
    $file_not_detect = $ini['other']['file_name_not_detect'];
    $file_not_detect = explode(',',$file_not_detect);
    foreach($it as $file)
    {
        if(in_array(pathinfo($file,PATHINFO_EXTENSION),$aaa)) {
            $info = pathinfo($file);
            $file_name =  basename($file,'.'.$info['extension']);
            $nf = $file_not_detect;
            if (!in_array($file_name, $nf)) {
                $n = str_replace($aaa,'mrg',$file);
                if (file_exists($n)) {
                    $m = fopen($n, "r");
                    $g = fgets($m);
                    fclose($m);
                    $c = base64_decode($g);
                    $a = substr_replace($c ,"",-3);
                    $b = base64_decode($a);
                    $d = substr($b, 0, 32);
                    if ($d == md5_file($file)) {
                        $ok++;
                        $mm .= "<div style=\"color:forestgreen;\">File : {$file} -> {$g} : Math </div>";
                    } else {
                        $fa++;
                        $mm .= "<div style=\"color:red;\">File : {$file} -> {$g} : Not Math </div>";
                        $old = array_slice(file($n),1);
                        $new = file($file);
                        foreach ( $old as $key => $value ) {
                            $old[$key] = preg_replace('/^#+(\d)+:/','', $old[$key]);
                            if ($old[$key] != $new[$key]) {
                                $mm .= "<div> Line : ".($key+1)."</div>";
                            }
                        }
                    }
                } else {
                    $mm .= "<div style=\"color:cornflowerblue;\">The file {$n} does not exist</div>";
                }
            }
        }
    }
    $ini = parse_ini_file("config.ini", true);
    if ($ini['email']['status']) {
        $to = $ini['email']['to'];
        $subject = "Code Detect Logs Report ".get_Datetime_Now();
        $mmm = "File Math : ".$ok."<br>";
        $mmmm = "File Not Math : ".$fa."<br>";
        $message = $mmm.$mmmm.$mm;
        $headers = "MIME-Version: 1.0" . "\r\n";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
        $headers .= "From: ".$ini['email']['from'];
        if (mail($to,$subject,$message,$headers)) {
            echo "Send Logs to " . $to .' Success<br>';
        }
    } else {
        if ($fa > 0) {
            if ($ini['email']['not_math_send_mail']) {
                $to = $ini['email']['to'];
                $subject = "Code Detect Logs Report ".get_Datetime_Now();
                $mmm = "File Math : ".$ok."<br>";
                $mmmm = "File Not Math : ".$fa."<br>";
                $message = $mmm.$mmmm.$mm;
                // Always set content-type when sending HTML email
                $headers = "MIME-Version: 1.0" . "\r\n";
                $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
                // More headers
                $headers .= "From: ".$ini['email']['from'];
                if (mail($to,$subject,$message,$headers)) {
                    echo "Send Logs to " . $to .' Success<br>';
                }
            }
        }
    }
    echo "File Math : ".$ok."<br>";
    echo "File Not Math : ".$fa."<br>";
    print_r($mm);
}
function up () {
    remove();
    gen();
    echo "Re generator success";
}
function get_Datetime_Now() {
    $ini = parse_ini_file("config.ini", true);
    $tz_object = new DateTimeZone($ini['other']['time_zone']);
    $datetime = new DateTime();
    $datetime->setTimezone($tz_object);
    return $datetime->format('Y\-m\-d\ h:i:s');
}

")); ?>
